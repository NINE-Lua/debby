local function clear()
    print("---------------------------- \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ")
    print("Mostly cleared print logs.")
    print("------------------------------------")
end
clear()
local found = 0
local total = 0
local veright = nil

local function check(name, value)
    total += 1
    if typeof(value) == "function" or typeof(value) == "table" then
        print("[" .. name .. "]: ✅")
        found += 1
    else
        print("[" .. name .. "]: ❌")
    end
end
local function getdebbyver(ver)
    if ver == 1.0 then
        veright = true
    else
        veright = false
    end
end
local start = tick()
check("getgenv", getgenv)
check("getrenv", getrenv)
check("getgc", getgc)
check("getreg", getreg)
check("getrawmetatable", getrawmetatable)
check("setrawmetatable", setrawmetatable)
check("setreadonly", setreadonly)
check("isreadonly", isreadonly)
check("make_writeable", make_writeable)
check("checkcaller", checkcaller)
check("iscaller", iscaller)
check("isluau", isluau)
check("islclosure", islclosure)
check("iscclosure", iscclosure)
check("newcclosure", newcclosure)
check("getthreadidentity", getthreadidentity)
check("setthreadidentity", setthreadidentity)
check("setidentity", setidentity)
check("getidentity", getidentity)
check("printidentity", printidentity)
check("getcallingscript", getcallingscript)
check("hookfunction", hookfunction)
check("hookmetamethod", hookmetamethod)
check("replaceclosure", replaceclosure)
check("clonefunction", clonefunction)
check("decompile", decompile)
check("xpcall", xpcall)
check("pcall", pcall)
check("getnamecallmethod", getnamecallmethod)
check("setnamecallmethod", setnamecallmethod)
check("getmetatable", getmetatable)
check("setmetatable", setmetatable)
check("rawget", rawget)
check("rawset", rawset)
check("rawequal", rawequal)
check("setclipboard", setclipboard)
check("writefile", writefile)
check("readfile", readfile)
check("appendfile", appendfile)
check("delfile", delfile)
check("isfile", isfile)
check("isfolder", isfolder)
check("makefolder", makefolder)
check("delfolder", delfolder)
check("listfiles", listfiles)
check("debug", debug)
check("debug.getinfo", debug and debug.getinfo)
check("debug.getupvalue", debug and debug.getupvalue)
check("debug.setupvalue", debug and debug.setupvalue)
check("debug.getlocal", debug and debug.getlocal)
check("debug.setlocal", debug and debug.setlocal)
check("debug.getregistry", debug and debug.getregistry)
check("debug.getconstants", debug and debug.getconstants)
check("debug.setconstant", debug and debug.setconstant)
check("debug.getproto", debug and debug.getproto)
check("debug.setproto", debug and debug.setproto)
check("debug.getstack", debug and debug.getstack)
check("debug.traceback", debug and debug.traceback)
check("Drawing", Drawing)
check("Drawing.new", Drawing and Drawing.new)
check("gethui", gethui)
check("gethiddenproperty", gethiddenproperty)
check("sethiddenproperty", sethiddenproperty)
check("gethiddenprop", gethiddenprop)
check("sethiddenprop", sethiddenprop)
check("iswindowactive", iswindowactive)
check("isrbxactive", isrbxactive)
check("getmouse", getmouse)
check("mousemoverel", mousemoverel)
check("mouse1click", mouse1click)
check("mouse1press", mouse1press)
check("mouse1release", mouse1release)
check("mouse2click", mouse2click)
check("identifyexecutor", identifyexecutor)
check("getexecutorname", getexecutorname)
check("getexecutorversion", getexecutorversion)
check("executor", executor)
check("is_synapse_function", is_synapse_function)
check("syn", syn)
check("fluxus", fluxus)
check("KRNL_LOADED", KRNL_LOADED)
check("pebc_execute", pebc_execute)
check("is_sirhurt_closure", is_sirhurt_closure)
check("firetouchinterest", firetouchinterest)
check("fireclickdetector", fireclickdetector)
check("firesignal", firesignal)
check("getconnections", getconnections)
check("getsignal", getsignal)
check("getinstances", getinstances)
check("getnilinstances", getnilinstances)
check("getclass", getclass)
check("getproperties", getproperties)
check("getscripts", getscripts)
check("getscriptbytecode", getscriptbytecode)
check("getscriptclosure", getscriptclosure)
check("request", request)
check("http_request", http_request)
check("syn.request", syn and syn.request)
check("WebSocket", WebSocket)
check("newwebhook", newwebhook)
check("isfolder", isfolder)
check("debugprofile", debugprofile)
check("debug.loadmodule", debug and debug.loadmodule)
check("debug.getmetatable", debug and debug.getmetatable)
check("debug.setmetatable", debug and debug.setmetatable)
check("debug.getinfo(1)", debug and debug.getinfo and debug.getinfo(1))
check("getloadedmodules", getloadedmodules)
check("getconnections", getconnections)
check("getproto", getproto)
check("getconstants", getconstants)
check("checkclosure", checkclosure)
check("is_syn_closure", is_syn_closure)
check("getexecutorid", getexecutorid)
check("queueonteleport", queueonteleport)
check("queueteleport", queueteleport)
check("syn.queue_on_teleport", syn and syn.queue_on_teleport)
check("syn.secure_call", syn and syn.secure_call)
check("syn.get_thread_identity", syn and syn.get_thread_identity)
check("syn.set_thread_identity", syn and syn.set_thread_identity)
check("syn.protect_gui", syn and syn.protect_gui)
check("syn.set_thread_context", syn and syn.set_thread_context)
check("syn.unprotect_gui", syn and syn.unprotect_gui)
check("syn.get_thread_context", syn and syn.get_thread_context)
check("getsenv", getsenv)
check("getmenv", getmenv)
check("getmodules", getmodules)
check("getsenv(game.Players.LocalPlayer)", getsenv and game and game.Players and game.Players.LocalPlayer and getsenv(game.Players.LocalPlayer))
check("fireproximityprompt", fireproximityprompt)
check("getspecialinfo", getspecialinfo)
check("getscriptinfo", getscriptinfo)
check("teleportqueue", teleportqueue)
check("get_fps", get_fps)
check("setfpscap", setfpscap)
check("getfpscap", getfpscap)
check("isfunction", isfunction)
check("get_gc_objects", get_gc_objects)
check("get_thread_context", get_thread_context)
check("set_thread_context", set_thread_context)
check("getfflag", getfflag)
check("setfflag", setfflag)
check("rconsoleprint", rconsoleprint)
check("rconsoleinfo", rconsoleinfo)
check("rconsolewarn", rconsolewarn)
check("rconsoleerr", rconsoleerr)
check("rconsoleclear", rconsoleclear)
check("rconsolename", rconsolename)
check("getexecutor", getexecutor)
check("messagebox", messagebox)
check("isfileinternal", isfileinternal)
check("isreadonlyglobal", isreadonlyglobal)
check("getcustomasset", getcustomasset)
check("getsynasset", getsynasset)
check("getasset", getasset)
check("getrawasset", getrawasset)
check("getcallstack", getcallstack)
check("debug.loadmodule", debug and debug.loadmodule)
check("debug.setfenv", debug and debug.setfenv)
check("debug.getfenv", debug and debug.getfenv)
check("debug.upvalues", debug and debug.upvalues)
check("debug.validlevel", debug and debug.validlevel)
check("debug.name", debug and debug.name)
check("debug.namewhat", debug and debug.namewhat)
check("debug.active", debug and debug.active)
check("getconstantsfromfunc", getconstantsfromfunc)
check("checkcallerclosure", checkcallerclosure)
check("hookfunction_closure", hookfunction_closure)
check("spooffunction", spooffunction)
check("is_protosmasher_closure", is_protosmasher_closure)
check("is_vega_closure", is_vega_closure)
check("setreadonly_closure", setreadonly_closure)
check("getclipboard", getclipboard)
check("keypress", keypress)
check("keyrelease", keyrelease)
check("mousescroll", mousescroll)
check("mouse2press", mouse2press)
check("mouse2release", mouse2release)
check("getrenderproperty", getrenderproperty)
check("setrenderproperty", setrenderproperty)
check("getstateenv", getstateenv)
check("getgcinfo", getgcinfo)
check("getstackinfo", getstackinfo)
check("getinfotable", getinfotable)
check("isscriptable", isscriptable)
check("getenvironments", getenvironments)
check("getrawclosure", getrawclosure)
check("getclosureconstants", getclosureconstants)
check("dumpbytecode", dumpbytecode)
check("getglobaltable", getglobaltable)
check("run_on_tick", run_on_tick)
check("isscriptcontext", isscriptcontext)
check("isexecutorfunction", isexecutorfunction)
check("syncontextlevel", syncontextlevel)
local finish = tick()

print("\n \n ---- Debby v1.0 ---- \n")
print("[Debby] Time Taken: " .. string.format("%.2f", finish - start) .. "s")
local percent = math.floor((found / total) * 100)
print("\n[Debby] Total: "..found.."/"..total.." ("..percent.."%)")
if percent >= 90 then
    print("[+] Fully-Loaded Executor")
elseif percent >= 75 then
    print("[~] High Compatibility")
elseif percent >= 50 then
    print("[-] Medium Capability")
else
    print("[!] Low/Basic Executor")
end
getdebbyver(1.0)
if veright == true then
    print("[.] Thanks for using debby! :)")
    else
    print("[!] You were using the wrong version of debby, the executor test results may be outdated.")
end
